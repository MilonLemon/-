#include "stdafx.h"
#include <iostream>

using namespace std;
struct Node
{
	int x;
	Node *Next, *Prev;
};

class List
{
	Node *Head, *Tail;
public:
	List() :Head(NULL), Tail(NULL) {};
	~List();
	void Add(int x);
	void Delete();
	void Show();
};


List::~List()
{
	while (Head)
	{
		Tail = Head->Next;
		delete Head;
		Head = Tail;
	}
}

void List::Add(int x)
{
	Node *temp = Tail;
	Node *temp_2 = new Node;
	temp_2->x = x;

		if (Head != NULL) {
			temp->Next = temp_2;
			temp_2->Prev = temp;
			Tail = temp_2;
			Tail->Next = NULL;

	}

	else 
		
		if (Head == NULL) {
			temp_2->Next = NULL;
			temp_2->Prev = NULL;
			Head = Tail = temp_2;

		}
}

void List::Show()
{
	cout << "\n";

	Node *temp = Tail;

	temp = Head;
	while (temp != NULL)
	{
		cout << temp->x << " ";
		temp = temp->Next;
	}

	cout << "\n";
}

void List::Delete() {

	Node *temp = Head;
	Node *temp_2;
	Node *temp_3;

			Head = temp->Next;
			delete temp;
			temp = Head;

			if (temp == NULL) {
				cout << "Очередь пустая";
			}

	}


int main(void) {

	setlocale(LC_ALL, "Russian");

	List lst;

	for (;;) {

		int c;
		cout << "Какое действие выполнить?\n";
		cout << "1) Вставка нового элемента с заданным номером\n";
		cout << "2) Удаление элемента с заданным номером\n";
		cin >> c;

		switch (c) {

		case 1: {

			int m;
			cout << "Введите элемент:\n";
			cin >> m;
			lst.Add(m);
			lst.Show();
			break;
		}

		case 2: {

			lst.Delete();
			lst.Show();

			break;
		}

		default: {

			cout << "Ошибка\n";
			break;
		}

		}

	}

	system("pause");

}


